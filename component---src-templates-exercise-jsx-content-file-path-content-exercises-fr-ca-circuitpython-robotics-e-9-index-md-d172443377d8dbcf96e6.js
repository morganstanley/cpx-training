"use strict";(self.webpackChunk_morgan_stanley_makerspace=self.webpackChunk_morgan_stanley_makerspace||[]).push([[3720],{3562:function(n,e,a){function t(n,e){return n.filter((n=>n.fields.slug.includes(`/${e}/`)))}function s(n,e){let a;const t=n.split("/");return e.forEach((n=>{t.includes(n)&&(a=n)})),a}a.d(e,{U:function(){return s},Z:function(){return t}})},6273:function(n,e,a){var t=a(6540),s=a(4810);const c=n=>{let{location:e,nodes:a,toc:c}=n;return a.map(((n,a)=>{const o=e.pathname.includes(n.fields.slug),l=n.frontmatter.title;return t.createElement("li",{className:o?"current":"",key:`exercise-${a}`},t.createElement(s.N_,{to:n.fields.slug},n.frontmatter.exercise," ) ",l),o&&c&&t.createElement("nav",{className:"nav exercise-content-nav"},t.createElement("ul",null,c.map(((n,e)=>t.createElement("li",{key:`toc-${e}`},t.createElement(s.N_,{to:n.url},n.title)))))))}))};e.A=n=>{let{location:e,nodes:a,toc:s}=n;const o=function(n){const e=[];return n.forEach((n=>{e.includes(n.frontmatter.level)||e.push(n.frontmatter.level)})),e}(a);return t.createElement("nav",{className:"nav exercise-nav"},o.map(((n,o)=>{const l=a.filter((e=>e.frontmatter.level===n&&!!e.frontmatter.exercise));return t.createElement("div",{key:`level-${o}`},null!==n&&t.createElement("h3",null,"Level ",n),t.createElement("ul",null,t.createElement(c,{location:e,nodes:l,toc:s})))})))}},7203:function(n,e,a){var t=a(6540);e.A=function(n){let{title:e,subtitle:a}=n;const s=`hero hero-${e.split(" ").join("-").toLowerCase()}`;return t.createElement("article",{className:s},t.createElement("div",{className:"pane"},t.createElement("header",{className:"content"},t.createElement("h2",null,t.createElement("span",{className:"cpx-title"},e))),t.createElement("section",{className:"content"},t.createElement("span",{className:"cpx-title"},a))))}},8453:function(n,e,a){a.d(e,{RP:function(){return c},xA:function(){return l}});var t=a(6540);const s=t.createContext({});function c(n){const e=t.useContext(s);return t.useMemo((()=>"function"==typeof n?n(e):{...e,...n}),[e,n])}const o={};function l({components:n,children:e,disableParentContext:a}){let l;return l=a?"function"==typeof n?n({}):n||o:c(n),t.createElement(s.Provider,{value:l},e)}},8509:function(n,e,a){var t=a(6540),s=a(4810);e.A=function(n){let{title:e,children:a}=n;const c=(0,s.GR)("3103987098");return t.createElement(t.Fragment,null,t.createElement("title",null,e," | ",c.site.siteMetadata.title),a)}},8858:function(n,e,a){a.r(e),a.d(e,{Head:function(){return d},default:function(){return m}});var t=a(8453),s=a(6540);function c(n){const e=Object.assign({p:"p",span:"span",h3:"h3",a:"a",ul:"ul",li:"li"},(0,t.RP)(),n.components);return s.createElement(s.Fragment,null,s.createElement(e.p,null,"Both the Circuit Playground Express and Bluefruit contain an accelerometer, so the device can detect when it’s moving and its orientation in three dimensions."),"\n",s.createElement(e.p,null,"The follow program reads acceleration along the x, y, and z axis, prints the values to the Serial console, and sets the red/green/blue values of the LEDs based on the x/y/z readings of the accelerometer."),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">from</span> adafruit_circuitplayground <span class="token keyword">import</span> cp\n<span class="token keyword">import</span> time\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    <span class="token keyword">if</span> cp<span class="token punctuation">.</span>switch<span class="token punctuation">:</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Slide switch off!"</span><span class="token punctuation">)</span>\n        cp<span class="token punctuation">.</span>pixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token keyword">else</span><span class="token punctuation">:</span>\n        R <span class="token operator">=</span> <span class="token number">0</span>\n        G <span class="token operator">=</span> <span class="token number">0</span>\n        B <span class="token operator">=</span> <span class="token number">0</span>\n        x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token operator">=</span> cp<span class="token punctuation">.</span>acceleration\n\n        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n        R <span class="token operator">=</span> R <span class="token operator">+</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        G <span class="token operator">=</span> G <span class="token operator">+</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        B <span class="token operator">=</span> B <span class="token operator">+</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        cp<span class="token punctuation">.</span>pixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">(</span>R<span class="token punctuation">,</span> G<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(e.h3,{id:"challenge-problem",style:{position:"relative"}},s.createElement(e.a,{href:"#challenge-problem","aria-label":"challenge problem permalink",className:"anchor before"},s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Challenge Problem"),"\n",s.createElement(e.p,null,"With the above program running, tilt the device so that the value of x is 0 while the values of y and z are approximately equal. What degree angle is the device being held at?"),"\n",s.createElement(e.h3,{id:"bluetooth-connection",style:{position:"relative"}},s.createElement(e.a,{href:"#bluetooth-connection","aria-label":"bluetooth connection permalink",className:"anchor before"},s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Bluetooth Connection"),"\n",s.createElement(e.p,null,"Our phones have accelerometers too - let’s send the readings from our phone to the Bluefruit device via bluetooth. This program is almost identical to the previous bluethooth exercise, except now the Bluefruit device will receive packets of type ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">AccelerometerPacket</code>'}})," instead of ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ColorPacket</code>'}}),"."),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">from</span> adafruit_circuitplayground <span class="token keyword">import</span> cp\n\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>packet <span class="token keyword">import</span> Packet\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>accelerometer_packet <span class="token keyword">import</span> AccelerometerPacket\n\n<span class="token keyword">from</span> adafruit_ble <span class="token keyword">import</span> BLERadio\n<span class="token keyword">from</span> adafruit_ble<span class="token punctuation">.</span>advertising<span class="token punctuation">.</span>standard <span class="token keyword">import</span> ProvideServicesAdvertisement\n<span class="token keyword">from</span> adafruit_ble<span class="token punctuation">.</span>services<span class="token punctuation">.</span>nordic <span class="token keyword">import</span> UARTService\n\nble <span class="token operator">=</span> BLERadio<span class="token punctuation">(</span><span class="token punctuation">)</span>\nuart_service <span class="token operator">=</span> UARTService<span class="token punctuation">(</span><span class="token punctuation">)</span>\nadvertisement <span class="token operator">=</span> ProvideServicesAdvertisement<span class="token punctuation">(</span>uart_service<span class="token punctuation">)</span>\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    <span class="token comment"># Keep advertising until another device connects</span>\n    ble<span class="token punctuation">.</span>start_advertising<span class="token punctuation">(</span>advertisement<span class="token punctuation">)</span>\n    <span class="token keyword">while</span> <span class="token keyword">not</span> ble<span class="token punctuation">.</span>connected<span class="token punctuation">:</span>\n        <span class="token keyword">pass</span>\n    ble<span class="token punctuation">.</span>stop_advertising<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token comment"># Keep listening for packets while connected</span>\n    <span class="token keyword">while</span> ble<span class="token punctuation">.</span>connected<span class="token punctuation">:</span>\n        <span class="token keyword">if</span> uart_service<span class="token punctuation">.</span>in_waiting<span class="token punctuation">:</span>\n            packet <span class="token operator">=</span> Packet<span class="token punctuation">.</span>from_stream<span class="token punctuation">(</span>uart_service<span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>packet<span class="token punctuation">,</span> AccelerometerPacket<span class="token punctuation">)</span><span class="token punctuation">:</span>\n                x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token operator">=</span> packet<span class="token punctuation">.</span>x<span class="token punctuation">,</span> packet<span class="token punctuation">.</span>y<span class="token punctuation">,</span> packet<span class="token punctuation">.</span>z\n                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                R <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                G <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                B <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                cp<span class="token punctuation">.</span>pixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">(</span>R<span class="token punctuation">,</span> G<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(e.h3,{id:"references",style:{position:"relative"}},s.createElement(e.a,{href:"#references","aria-label":"references permalink",className:"anchor before"},s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"References"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"\n",s.createElement(e.p,null,s.createElement(e.a,{href:"https://docs.circuitpython.org/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.circuit_playground_base.CircuitPlaygroundBase.acceleration"},"cp.acceleration")),"\n"),"\n",s.createElement(e.li,null,"\n",s.createElement(e.p,null,s.createElement(e.a,{href:"https://www.w3schools.com/python/ref_func_abs.asp"},"Python: abs function")),"\n"),"\n",s.createElement(e.li,null,"\n",s.createElement(e.p,null,s.createElement(e.a,{href:"https://docs.circuitpython.org/projects/bluefruitconnect/en/latest/api.html#adafruit-bluefruit-connect-accelerometer-packet"},"AccelerometerPacket")),"\n"),"\n"))}var o=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,t.RP)(),n.components);return e?s.createElement(e,n,s.createElement(c,n)):c(n)},l=a(4810),p=a(6273),r=a(9975),i=a(8509),u=a(3562);const k=n=>{var e,a,t,c;let{children:o,data:i,pageContext:k,location:m}=n;const d=k.frontmatter.title,h=i.mdx.tableOfContents.items,f=i.mdx.fields.slug,v=(0,s.useMemo)((()=>i.allDirectory.nodes.map((n=>n.base))),[i.allDirectory.nodes]),E=(0,u.U)(f,v),g=(0,u.Z)(i.allMdx.nodes,E),[y,b]=function(n,e){const a=n.length,t=n.findIndex((n=>e.pathname.includes(n.fields.slug))),s=0!==t&&n[t-1];return[t!==a-1&&n[t+1],s]}(g,m);return s.createElement(r.A,{location:m},s.createElement("article",{className:"exercise-main content"},s.createElement(p.A,{location:m,nodes:g,toc:h}),s.createElement("div",{className:"exercise-content"},s.createElement("header",null,s.createElement("h2",null,d)),o)),s.createElement("nav",{className:"content"},s.createElement("ul",{className:"exercise-nav"},s.createElement("li",null,b&&s.createElement(l.N_,{to:b.fields.slug,rel:"prev"},"← Exercise ",null===(e=b.frontmatter)||void 0===e?void 0:e.exercise," |"," ",null===(a=b.frontmatter)||void 0===a?void 0:a.title)),s.createElement("li",null,y&&s.createElement(l.N_,{to:y.fields.slug,rel:"next"},"Exercise ",null===(t=y.frontmatter)||void 0===t?void 0:t.exercise," |"," ",null===(c=y.frontmatter)||void 0===c?void 0:c.title," →")))))};function m(n){return s.createElement(k,n,s.createElement(o,n))}const d=n=>{let{pageContext:e}=n;const a=`${e.frontmatter.title} | Level ${e.frontmatter.level} | Exercise ${e.frontmatter.exercise}`;return s.createElement(i.A,{title:a},s.createElement("meta",{name:"description",content:e.description}))}},9975:function(n,e,a){a.d(e,{A:function(){return u}});var t=a(6540),s=a(8453);var c=()=>t.createElement("div",{className:"content"},"Thanks! We hope you found what you are looking for. Please feel free to contribute via"," ",t.createElement("a",{href:"https://github.com/MorganStanley/cpx-training",target:"_blank",rel:"noreferrer"},"Github"),"."),o=a(4810);var l=n=>{let{location:e}=n;const a={Learn:"/exercises",Teach:"/teach","Make a Makerspace":"/makerspace",About:"/about"};return t.createElement("div",{className:"content"},t.createElement("h1",null,t.createElement(o.N_,{className:"logo-link",to:"/"},"Makerspace")),t.createElement("div",{className:"header-nav"},t.createElement("ul",null,Object.keys(a).map((function(n){const s=a[n],c=s===e.pathname?"nav-link-current":"nav-link";return t.createElement("li",{key:n},t.createElement(o.N_,{className:c,to:s},n))})))))};function p(n){let{term:e,definition:a}=n;return t.createElement("div",null,t.createElement("dt",null,e),t.createElement("dd",null,a))}var r=function(n){let{name:e,computerType:a,mpType:s,language:c}=n;return t.createElement("div",{className:"summary-card"},t.createElement("h3",null,e),t.createElement("dl",null,a&&t.createElement(p,{term:"Computer",definition:a}),s&&t.createElement(p,{term:"Microprocessor",definition:s}),c&&t.createElement(p,{term:"Language",definition:c})))};const i={Hero:a(7203).A,Link:o.N_,SummaryCard:r,Translations:function(){const n=(0,o.GR)("2398385559").allDirectory.nodes.map((n=>n.base));return t.createElement("ul",null,n.map((n=>{const e=`/exercises/${n}/`;return t.createElement("li",null,t.createElement(o.N_,{to:e},n))})))}};var u=function(n){let{location:e,children:a}=n;return t.createElement("div",{className:"main"},t.createElement("header",{className:"header-main"},t.createElement(l,{location:e})),t.createElement("main",{className:"body-main"},t.createElement(s.xA,{components:i},a)),t.createElement("footer",{className:"footer-main"},t.createElement(c,null)))}}}]);
//# sourceMappingURL=component---src-templates-exercise-jsx-content-file-path-content-exercises-fr-ca-circuitpython-robotics-e-9-index-md-d172443377d8dbcf96e6.js.map