"use strict";(self.webpackChunk_morgan_stanley_makerspace=self.webpackChunk_morgan_stanley_makerspace||[]).push([[1518],{3562:function(n,a,e){function t(n,a){return n.filter((n=>n.fields.slug.includes(`/${a}/`)))}function s(n,a){let e;const t=n.split("/");return a.forEach((n=>{t.includes(n)&&(e=n)})),e}e.d(a,{U:function(){return s},Z:function(){return t}})},6273:function(n,a,e){var t=e(6540),s=e(4810);const o=n=>{let{location:a,nodes:e,toc:o}=n;return e.map(((n,e)=>{const p=a.pathname.includes(n.fields.slug),c=n.frontmatter.title;return t.createElement("li",{className:p?"current":"",key:`exercise-${e}`},t.createElement(s.N_,{to:n.fields.slug},n.frontmatter.exercise," ) ",c),p&&o&&t.createElement("nav",{className:"nav exercise-content-nav"},t.createElement("ul",null,o.map(((n,a)=>t.createElement("li",{key:`toc-${a}`},t.createElement(s.N_,{to:n.url},n.title)))))))}))};a.A=n=>{let{location:a,nodes:e,toc:s}=n;const p=function(n){const a=[];return n.forEach((n=>{a.includes(n.frontmatter.level)||a.push(n.frontmatter.level)})),a}(e);return t.createElement("nav",{className:"nav exercise-nav"},p.map(((n,p)=>{const c=e.filter((a=>a.frontmatter.level===n&&!!a.frontmatter.exercise));return t.createElement("div",{key:`level-${p}`},null!==n&&t.createElement("h3",null,"Level ",n),t.createElement("ul",null,t.createElement(o,{location:a,nodes:c,toc:s})))})))}},7203:function(n,a,e){var t=e(6540);a.A=function(n){let{title:a,subtitle:e}=n;const s=`hero hero-${a.split(" ").join("-").toLowerCase()}`;return t.createElement("article",{className:s},t.createElement("div",{className:"pane"},t.createElement("header",{className:"content"},t.createElement("h2",null,t.createElement("span",{className:"cpx-title"},a))),t.createElement("section",{className:"content"},t.createElement("span",{className:"cpx-title"},e))))}},7375:function(n,a,e){e.r(a),e.d(a,{Head:function(){return m},default:function(){return d}});var t=e(8453),s=e(6540);function o(n){const a=Object.assign({p:"p",h1:"h1",a:"a",span:"span",ul:"ul",li:"li"},(0,t.RP)(),n.components);return s.createElement(s.Fragment,null,s.createElement(a.p,null,"Now let’s program the robot!"),"\n",s.createElement(a.h1,{id:"bluetooth-code",style:{position:"relative"}},s.createElement(a.a,{href:"#bluetooth-code","aria-label":"bluetooth code permalink",className:"anchor before"},s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Bluetooth Code"),"\n",s.createElement(a.p,null,"Start with a basic program that listens for the three types of Bluetooth packets we’ve been using (",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ColorPacket</code>'}}),", ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">AccelerometerPacket</code>'}}),", ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ButtonPacket</code>'}}),") and prints the packet contents to the serial console. Start by running this program and sending each of the 3 packet types from your phone, confirming they’re printed to the serial console. This will be the foundation of our robot program:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">from</span> adafruit_ble <span class="token keyword">import</span> BLERadio\n<span class="token keyword">from</span> adafruit_ble<span class="token punctuation">.</span>advertising<span class="token punctuation">.</span>standard <span class="token keyword">import</span> ProvideServicesAdvertisement\n<span class="token keyword">from</span> adafruit_ble<span class="token punctuation">.</span>services<span class="token punctuation">.</span>nordic <span class="token keyword">import</span> UARTService\n\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>packet <span class="token keyword">import</span> Packet\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>color_packet <span class="token keyword">import</span> ColorPacket\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>accelerometer_packet <span class="token keyword">import</span> AccelerometerPacket\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>button_packet <span class="token keyword">import</span> ButtonPacket\n\n<span class="token keyword">from</span> adafruit_crickit <span class="token keyword">import</span> crickit\n\nble <span class="token operator">=</span> BLERadio<span class="token punctuation">(</span><span class="token punctuation">)</span>\nuart_service <span class="token operator">=</span> UARTService<span class="token punctuation">(</span><span class="token punctuation">)</span>\nadvertisement <span class="token operator">=</span> ProvideServicesAdvertisement<span class="token punctuation">(</span>uart_service<span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">handle_color_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Color=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>color<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">handle_accelerometer_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"X=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>x<span class="token punctuation">}</span></span><span class="token string">, Y=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>y<span class="token punctuation">}</span></span><span class="token string">, Z=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>z<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">handle_button_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Button=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>button<span class="token punctuation">}</span></span><span class="token string">, Pressed=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>pressed<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    <span class="token comment"># Keep advertising until another device connects</span>\n    ble<span class="token punctuation">.</span>start_advertising<span class="token punctuation">(</span>advertisement<span class="token punctuation">)</span>\n    <span class="token keyword">while</span> <span class="token keyword">not</span> ble<span class="token punctuation">.</span>connected<span class="token punctuation">:</span>\n        <span class="token keyword">pass</span>\n    ble<span class="token punctuation">.</span>stop_advertising<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token comment"># Keep listening for packets while connected</span>\n    <span class="token keyword">while</span> ble<span class="token punctuation">.</span>connected<span class="token punctuation">:</span>\n        <span class="token keyword">if</span> uart_service<span class="token punctuation">.</span>in_waiting<span class="token punctuation">:</span>\n            packet <span class="token operator">=</span> Packet<span class="token punctuation">.</span>from_stream<span class="token punctuation">(</span>uart_service<span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>packet<span class="token punctuation">,</span> ColorPacket<span class="token punctuation">)</span><span class="token punctuation">:</span>\n                handle_color_packet<span class="token punctuation">(</span>packet<span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>packet<span class="token punctuation">,</span> AccelerometerPacket<span class="token punctuation">)</span><span class="token punctuation">:</span>\n                handle_accelerometer_packet<span class="token punctuation">(</span>packet<span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>packet<span class="token punctuation">,</span> ButtonPacket<span class="token punctuation">)</span><span class="token punctuation">:</span>\n                handle_button_packet<span class="token punctuation">(</span>packet<span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.h1,{id:"accelerometer-fowardbackward",style:{position:"relative"}},s.createElement(a.a,{href:"#accelerometer-fowardbackward","aria-label":"accelerometer fowardbackward permalink",className:"anchor before"},s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Accelerometer: Foward/Backward"),"\n",s.createElement(a.p,null,"We’ll use the accelerometer measurement along the Z-axis to set forward/backward motor speed. Be sure the throttle doesn’t go above 1.0 or below -1.0, otherwise an exception will be thrown:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">compute_throttle</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">if</span> value <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token number">1</span>\n    <span class="token keyword">elif</span> value <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>\n    <span class="token keyword">return</span> value\n\n<span class="token keyword">def</span> <span class="token function">handle_accelerometer_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"X=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>x<span class="token punctuation">}</span></span><span class="token string">, Y=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>y<span class="token punctuation">}</span></span><span class="token string">, Z=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>z<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n    throttle <span class="token operator">=</span> compute_throttle<span class="token punctuation">(</span>packet<span class="token punctuation">.</span>z<span class="token punctuation">)</span>\n    crickit<span class="token punctuation">.</span>dc_motor_1<span class="token punctuation">.</span>throttle <span class="token operator">=</span> throttle\n    crickit<span class="token punctuation">.</span>dc_motor_2<span class="token punctuation">.</span>throttle <span class="token operator">=</span> throttle</code></pre></div>'}}),"\n",s.createElement(a.p,null,"Try using your phone to make the robot move forward and backward, and notice how the speed changes based on the tilt of your phone. The wheel attachments probably won’t be perfectly straight so you’re likely to see the robot veer slightly to the left or right."),"\n",s.createElement(a.h1,{id:"accelerometer-leftright",style:{position:"relative"}},s.createElement(a.a,{href:"#accelerometer-leftright","aria-label":"accelerometer leftright permalink",className:"anchor before"},s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Accelerometer: Left/Right"),"\n",s.createElement(a.p,null,"Now let’s add the ability to turn left and right by changing the motor throttles to different values based on accelerometer measurement along the X-axis:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">handle_accelerometer_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"X=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>x<span class="token punctuation">}</span></span><span class="token string">, Y=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>y<span class="token punctuation">}</span></span><span class="token string">, Z=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>z<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n    throttle_1 <span class="token operator">=</span> compute_throttle<span class="token punctuation">(</span>packet<span class="token punctuation">.</span>z <span class="token operator">+</span> packet<span class="token punctuation">.</span>x<span class="token punctuation">)</span>\n    throttle_2 <span class="token operator">=</span> compute_throttle<span class="token punctuation">(</span>packet<span class="token punctuation">.</span>z <span class="token operator">-</span> packet<span class="token punctuation">.</span>x<span class="token punctuation">)</span>\n    crickit<span class="token punctuation">.</span>dc_motor_1<span class="token punctuation">.</span>throttle <span class="token operator">=</span> throttle_1\n    crickit<span class="token punctuation">.</span>dc_motor_2<span class="token punctuation">.</span>throttle <span class="token operator">=</span> throttle_2</code></pre></div>'}}),"\n",s.createElement(a.h1,{id:"servo-turning-heads",style:{position:"relative"}},s.createElement(a.a,{href:"#servo-turning-heads","aria-label":"servo turning heads permalink",className:"anchor before"},s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Servo: Turning Heads"),"\n",s.createElement(a.p,null,"Now let’s attach the servo from the previous lesson and swivel the servo arm back and forth using the control pad on your phone app:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token comment"># Start with arm at the halfway point</span>\nangle <span class="token operator">=</span> <span class="token number">90</span>\ncrickit<span class="token punctuation">.</span>servo_1<span class="token punctuation">.</span>angle <span class="token operator">=</span> angle\n\n<span class="token keyword">def</span> <span class="token function">adjust_angle</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">global</span> angle\n    angle <span class="token operator">=</span> angle <span class="token operator">+</span> amount\n    <span class="token keyword">if</span> angle <span class="token operator">></span> <span class="token number">180</span><span class="token punctuation">:</span>\n        angle <span class="token operator">=</span> <span class="token number">180</span>\n    <span class="token keyword">elif</span> angle <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>\n        angle <span class="token operator">=</span> <span class="token number">0</span>\n    crickit<span class="token punctuation">.</span>servo_1<span class="token punctuation">.</span>angle <span class="token operator">=</span> angle\n\n<span class="token keyword">def</span> <span class="token function">handle_button_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Button=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>button<span class="token punctuation">}</span></span><span class="token string">, Pressed=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>pressed<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> packet<span class="token punctuation">.</span>pressed<span class="token punctuation">:</span>\n        <span class="token keyword">if</span> packet<span class="token punctuation">.</span>button <span class="token operator">==</span> ButtonPacket<span class="token punctuation">.</span>LEFT<span class="token punctuation">:</span>\n            adjust_angle<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\n        <span class="token keyword">elif</span> packet<span class="token punctuation">.</span>button <span class="token operator">==</span> ButtonPacket<span class="token punctuation">.</span>RIGHT<span class="token punctuation">:</span>\n            adjust_angle<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"We can mount a paper cup “head” onto the servo arm, allowing us to turn the robot’s head left and right using the control pad while it moves around based on the accelerometer readings."),"\n",s.createElement(a.h1,{id:"customize-it",style:{position:"relative"}},s.createElement(a.a,{href:"#customize-it","aria-label":"customize it permalink",className:"anchor before"},s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Customize It!"),"\n",s.createElement(a.p,null,"Now that we have the robot working let’s add some bells and whistles! The left and right control pad buttons are used to adjust the servo angle, but currently the up and down buttons and the four number buttons are unused. Here are a few ideas:"),"\n",s.createElement(a.ul,null,"\n",s.createElement(a.li,null,"Play a tune (go back to the Sounds lesson for some musical samples)."),"\n",s.createElement(a.li,null,"Blink LEDs in a pattern."),"\n",s.createElement(a.li,null,"Program the color picker to allow you to change LED colors."),"\n"))}var p=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.RP)(),n.components);return a?s.createElement(a,n,s.createElement(o,n)):o(n)},c=e(4810),l=e(6273),r=e(9975),i=e(8509),u=e(3562);const k=n=>{var a,e,t,o;let{children:p,data:i,pageContext:k,location:d}=n;const m=k.frontmatter.title,h=i.mdx.tableOfContents.items,f=i.mdx.fields.slug,g=(0,s.useMemo)((()=>i.allDirectory.nodes.map((n=>n.base))),[i.allDirectory.nodes]),v=(0,u.U)(f,g),y=(0,u.Z)(i.allMdx.nodes,v),[E,b]=function(n,a){const e=n.length,t=n.findIndex((n=>a.pathname.includes(n.fields.slug))),s=0!==t&&n[t-1];return[t!==e-1&&n[t+1],s]}(y,d);return s.createElement(r.A,{location:d},s.createElement("article",{className:"exercise-main content"},s.createElement(l.A,{location:d,nodes:y,toc:h}),s.createElement("div",{className:"exercise-content"},s.createElement("header",null,s.createElement("h2",null,m)),p)),s.createElement("nav",{className:"content"},s.createElement("ul",{className:"exercise-nav"},s.createElement("li",null,b&&s.createElement(c.N_,{to:b.fields.slug,rel:"prev"},"← Exercise ",null===(a=b.frontmatter)||void 0===a?void 0:a.exercise," |"," ",null===(e=b.frontmatter)||void 0===e?void 0:e.title)),s.createElement("li",null,E&&s.createElement(c.N_,{to:E.fields.slug,rel:"next"},"Exercise ",null===(t=E.frontmatter)||void 0===t?void 0:t.exercise," |"," ",null===(o=E.frontmatter)||void 0===o?void 0:o.title," →")))))};function d(n){return s.createElement(k,n,s.createElement(p,n))}const m=n=>{let{pageContext:a}=n;const e=`${a.frontmatter.title} | Level ${a.frontmatter.level} | Exercise ${a.frontmatter.exercise}`;return s.createElement(i.A,{title:e},s.createElement("meta",{name:"description",content:a.description}))}},8453:function(n,a,e){e.d(a,{RP:function(){return o},xA:function(){return c}});var t=e(6540);const s=t.createContext({});function o(n){const a=t.useContext(s);return t.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}const p={};function c({components:n,children:a,disableParentContext:e}){let c;return c=e?"function"==typeof n?n({}):n||p:o(n),t.createElement(s.Provider,{value:c},a)}},8509:function(n,a,e){var t=e(6540),s=e(4810);a.A=function(n){let{title:a,children:e}=n;const o=(0,s.GR)("3103987098");return t.createElement(t.Fragment,null,t.createElement("title",null,a," | ",o.site.siteMetadata.title),e)}},9975:function(n,a,e){e.d(a,{A:function(){return u}});var t=e(6540),s=e(8453);var o=()=>t.createElement("div",{className:"content"},"Thanks! We hope you found what you are looking for. Please feel free to contribute via"," ",t.createElement("a",{href:"https://github.com/MorganStanley/cpx-training",target:"_blank",rel:"noreferrer"},"Github"),"."),p=e(4810);var c=n=>{let{location:a}=n;const e={Learn:"/exercises",Teach:"/teach","Make a Makerspace":"/makerspace",About:"/about"};return t.createElement("div",{className:"content"},t.createElement("h1",null,t.createElement(p.N_,{className:"logo-link",to:"/"},"Makerspace")),t.createElement("div",{className:"header-nav"},t.createElement("ul",null,Object.keys(e).map((function(n){const s=e[n],o=s===a.pathname?"nav-link-current":"nav-link";return t.createElement("li",{key:n},t.createElement(p.N_,{className:o,to:s},n))})))))};function l(n){let{term:a,definition:e}=n;return t.createElement("div",null,t.createElement("dt",null,a),t.createElement("dd",null,e))}var r=function(n){let{name:a,computerType:e,mpType:s,language:o}=n;return t.createElement("div",{className:"summary-card"},t.createElement("h3",null,a),t.createElement("dl",null,e&&t.createElement(l,{term:"Computer",definition:e}),s&&t.createElement(l,{term:"Microprocessor",definition:s}),o&&t.createElement(l,{term:"Language",definition:o})))};const i={Hero:e(7203).A,Link:p.N_,SummaryCard:r,Translations:function(){const n=(0,p.GR)("2398385559").allDirectory.nodes.map((n=>n.base));return t.createElement("ul",null,n.map((n=>{const a=`/exercises/${n}/`;return t.createElement("li",null,t.createElement(p.N_,{to:a},n))})))}};var u=function(n){let{location:a,children:e}=n;return t.createElement("div",{className:"main"},t.createElement("header",{className:"header-main"},t.createElement(c,{location:a})),t.createElement("main",{className:"body-main"},t.createElement(s.xA,{components:i},e)),t.createElement("footer",{className:"footer-main"},t.createElement(o,null)))}}}]);
//# sourceMappingURL=component---src-templates-exercise-jsx-content-file-path-content-exercises-fr-ca-circuitpython-robotics-e-14-index-md-4c76a49a49aed45b01cb.js.map