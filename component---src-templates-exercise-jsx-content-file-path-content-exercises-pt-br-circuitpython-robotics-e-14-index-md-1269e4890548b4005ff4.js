"use strict";(self.webpackChunk_morgan_stanley_makerspace=self.webpackChunk_morgan_stanley_makerspace||[]).push([[1122],{2702:function(n,a,e){e.r(a),e.d(a,{Head:function(){return m},default:function(){return d}});var s=e(8453),t=e(6540);function o(n){const a=Object.assign({p:"p",h1:"h1",a:"a",span:"span",ul:"ul",li:"li"},(0,s.RP)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.p,null,"Agora vamos programar o robô!"),"\n",t.createElement(a.h1,{id:"código-bluetooth",style:{position:"relative"}},t.createElement(a.a,{href:"#c%C3%B3digo-bluetooth","aria-label":"código bluetooth permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Código Bluetooth"),"\n",t.createElement(a.p,null,"Comece com um programa básico que detecta os três tipos de pacotes Bluetooth que usamos (",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ColorPacket</code>'}}),", ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">AccelerometerPacket</code>'}}),", ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ButtonPacket</code>'}}),") e imprime o conteúdo do pacote no console serial. Comece executando este programa e enviando cada um dos três tipos de pacotes do seu telefone, confirmando que eles foram impressos no console serial. Esta será a base do nosso programa de robô:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">from</span> adafruit_ble <span class="token keyword">import</span> BLERadio\n<span class="token keyword">from</span> adafruit_ble<span class="token punctuation">.</span>advertising<span class="token punctuation">.</span>standard <span class="token keyword">import</span> ProvideServicesAdvertisement\n<span class="token keyword">from</span> adafruit_ble<span class="token punctuation">.</span>services<span class="token punctuation">.</span>nordic <span class="token keyword">import</span> UARTService\n\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>packet <span class="token keyword">import</span> Packet\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>color_packet <span class="token keyword">import</span> ColorPacket\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>accelerometer_packet <span class="token keyword">import</span> AccelerometerPacket\n<span class="token keyword">from</span> adafruit_bluefruit_connect<span class="token punctuation">.</span>button_packet <span class="token keyword">import</span> ButtonPacket\n\n<span class="token keyword">from</span> adafruit_crickit <span class="token keyword">import</span> crickit\n\nble <span class="token operator">=</span> BLERadio<span class="token punctuation">(</span><span class="token punctuation">)</span>\nuart_service <span class="token operator">=</span> UARTService<span class="token punctuation">(</span><span class="token punctuation">)</span>\nadvertisement <span class="token operator">=</span> ProvideServicesAdvertisement<span class="token punctuation">(</span>uart_service<span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">handle_color_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Color=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>color<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">handle_accelerometer_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"X=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>x<span class="token punctuation">}</span></span><span class="token string">, Y=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>y<span class="token punctuation">}</span></span><span class="token string">, Z=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>z<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">handle_button_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Button=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>button<span class="token punctuation">}</span></span><span class="token string">, Pressed=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>pressed<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    <span class="token comment"># Continue anunciando até que outro dispositivo se conecte</span>\n    ble<span class="token punctuation">.</span>start_advertising<span class="token punctuation">(</span>advertisement<span class="token punctuation">)</span>\n    <span class="token keyword">while</span> <span class="token keyword">not</span> ble<span class="token punctuation">.</span>connected<span class="token punctuation">:</span>\n        <span class="token keyword">pass</span>\n    ble<span class="token punctuation">.</span>stop_advertising<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token comment"># Continue ouvindo por pacotes enquanto estiver conectado</span>\n    <span class="token keyword">while</span> ble<span class="token punctuation">.</span>connected<span class="token punctuation">:</span>\n        <span class="token keyword">if</span> uart_service<span class="token punctuation">.</span>in_waiting<span class="token punctuation">:</span>\n            packet <span class="token operator">=</span> Packet<span class="token punctuation">.</span>from_stream<span class="token punctuation">(</span>uart_service<span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>packet<span class="token punctuation">,</span> ColorPacket<span class="token punctuation">)</span><span class="token punctuation">:</span>\n                handle_color_packet<span class="token punctuation">(</span>packet<span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>packet<span class="token punctuation">,</span> AccelerometerPacket<span class="token punctuation">)</span><span class="token punctuation">:</span>\n                handle_accelerometer_packet<span class="token punctuation">(</span>packet<span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>packet<span class="token punctuation">,</span> ButtonPacket<span class="token punctuation">)</span><span class="token punctuation">:</span>\n                handle_button_packet<span class="token punctuation">(</span>packet<span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.h1,{id:"acelerômetro-frentetrás",style:{position:"relative"}},t.createElement(a.a,{href:"#aceler%C3%B4metro-frentetr%C3%A1s","aria-label":"acelerômetro frentetrás permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Acelerômetro: Frente/Trás"),"\n",t.createElement(a.p,null,"Usaremos a medição do acelerômetro ao longo do eixo Z para definir a velocidade do motor para frente/trás. Certifique-se de que o acelerador não ultrapasse 1,0 ou fique abaixo de -1,0, caso contrário, uma exceção será gerada:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">compute_throttle</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">if</span> value <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token number">1</span>\n    <span class="token keyword">elif</span> value <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>\n    <span class="token keyword">return</span> value\n\n<span class="token keyword">def</span> <span class="token function">handle_accelerometer_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"X=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>x<span class="token punctuation">}</span></span><span class="token string">, Y=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>y<span class="token punctuation">}</span></span><span class="token string">, Z=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>z<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n    throttle <span class="token operator">=</span> compute_throttle<span class="token punctuation">(</span>packet<span class="token punctuation">.</span>z<span class="token punctuation">)</span>\n    crickit<span class="token punctuation">.</span>dc_motor_1<span class="token punctuation">.</span>throttle <span class="token operator">=</span> throttle\n    crickit<span class="token punctuation">.</span>dc_motor_2<span class="token punctuation">.</span>throttle <span class="token operator">=</span> throttle</code></pre></div>'}}),"\n",t.createElement(a.p,null,"Tente usar seu celular para fazer o robô se mover para frente e para trás e observe como a velocidade muda com a inclinação do celular. Os suportes das rodas provavelmente não estarão perfeitamente retos, então é provável que você veja o robô se inclinar ligeiramente para a esquerda ou para a direita."),"\n",t.createElement(a.h1,{id:"acelerômetro-esquerdadireita",style:{position:"relative"}},t.createElement(a.a,{href:"#aceler%C3%B4metro-esquerdadireita","aria-label":"acelerômetro esquerdadireita permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Acelerômetro: Esquerda/Direita"),"\n",t.createElement(a.p,null,"Agora vamos adicionar a capacidade de virar para a esquerda e para a direita alterando os aceleradores do motor para valores diferentes com base na medição do acelerômetro ao longo do eixo X:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">handle_accelerometer_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"X=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>x<span class="token punctuation">}</span></span><span class="token string">, Y=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>y<span class="token punctuation">}</span></span><span class="token string">, Z=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>z<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n    throttle_1 <span class="token operator">=</span> compute_throttle<span class="token punctuation">(</span>packet<span class="token punctuation">.</span>z <span class="token operator">+</span> packet<span class="token punctuation">.</span>x<span class="token punctuation">)</span>\n    throttle_2 <span class="token operator">=</span> compute_throttle<span class="token punctuation">(</span>packet<span class="token punctuation">.</span>z <span class="token operator">-</span> packet<span class="token punctuation">.</span>x<span class="token punctuation">)</span>\n    crickit<span class="token punctuation">.</span>dc_motor_1<span class="token punctuation">.</span>throttle <span class="token operator">=</span> throttle_1\n    crickit<span class="token punctuation">.</span>dc_motor_2<span class="token punctuation">.</span>throttle <span class="token operator">=</span> throttle_2</code></pre></div>'}}),"\n",t.createElement(a.h1,{id:"servo-virando-a-cabeça",style:{position:"relative"}},t.createElement(a.a,{href:"#servo-virando-a-cabe%C3%A7a","aria-label":"servo virando a cabeça permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Servo: Virando a cabeça"),"\n",t.createElement(a.p,null,"Agora vamos anexar o servo da lição anterior e girar o braço do servo para frente e para trás usando o painel de controle do aplicativo do seu telefone:"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token comment"># Comece com o braço na metade do caminho</span>\nangle <span class="token operator">=</span> <span class="token number">90</span>\ncrickit<span class="token punctuation">.</span>servo_1<span class="token punctuation">.</span>angle <span class="token operator">=</span> angle\n\n<span class="token keyword">def</span> <span class="token function">adjust_angle</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">global</span> angle\n    angle <span class="token operator">=</span> angle <span class="token operator">+</span> amount\n    <span class="token keyword">if</span> angle <span class="token operator">></span> <span class="token number">180</span><span class="token punctuation">:</span>\n        angle <span class="token operator">=</span> <span class="token number">180</span>\n    <span class="token keyword">elif</span> angle <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>\n        angle <span class="token operator">=</span> <span class="token number">0</span>\n    crickit<span class="token punctuation">.</span>servo_1<span class="token punctuation">.</span>angle <span class="token operator">=</span> angle\n\n<span class="token keyword">def</span> <span class="token function">handle_button_packet</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Button=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>button<span class="token punctuation">}</span></span><span class="token string">, Pressed=</span><span class="token interpolation"><span class="token punctuation">{</span>packet<span class="token punctuation">.</span>pressed<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> packet<span class="token punctuation">.</span>pressed<span class="token punctuation">:</span>\n        <span class="token keyword">if</span> packet<span class="token punctuation">.</span>button <span class="token operator">==</span> ButtonPacket<span class="token punctuation">.</span>LEFT<span class="token punctuation">:</span>\n            adjust_angle<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\n        <span class="token keyword">elif</span> packet<span class="token punctuation">.</span>button <span class="token operator">==</span> ButtonPacket<span class="token punctuation">.</span>RIGHT<span class="token punctuation">:</span>\n            adjust_angle<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Podemos montar uma “cabeça” de copo de papel no braço do servo, permitindo girar a cabeça do robô para a esquerda e para a direita usando o painel de controle enquanto ele se move com base nas leituras do acelerômetro."),"\n",t.createElement(a.h1,{id:"personalize",style:{position:"relative"}},t.createElement(a.a,{href:"#personalize","aria-label":"personalize permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Personalize!"),"\n",t.createElement(a.p,null,"Agora que o robô está funcionando, vamos adicionar alguns recursos! Os botões esquerdo e direito do painel de controle são usados ​​para ajustar o ângulo do servo, mas atualmente os botões para cima e para baixo e os quatro botões numéricos não são usados. Aqui estão algumas ideias:"),"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,"Toque uma música (volte à lição Sons para alguns exemplos musicais)."),"\n",t.createElement(a.li,null,"Pisque os LEDs em um padrão."),"\n",t.createElement(a.li,null,"Programe o seletor de cores para permitir que você altere as cores dos LEDs."),"\n"))}var p=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,s.RP)(),n.components);return a?t.createElement(a,n,t.createElement(o,n)):o(n)},c=e(4810),l=e(6273),r=e(9975),i=e(8509),u=e(3562);const k=n=>{var a,e,s,o;let{children:p,data:i,pageContext:k,location:d}=n;const m=k.frontmatter.title,h=i.mdx.tableOfContents.items,f=i.mdx.fields.slug,g=(0,t.useMemo)((()=>i.allDirectory.nodes.map((n=>n.base))),[i.allDirectory.nodes]),v=(0,u.U)(f,g),E=(0,u.Z)(i.allMdx.nodes,v),[y,_]=function(n,a){const e=n.length,s=n.findIndex((n=>a.pathname.includes(n.fields.slug))),t=0!==s&&n[s-1];return[s!==e-1&&n[s+1],t]}(E,d);return t.createElement(r.A,{location:d},t.createElement("article",{className:"exercise-main content"},t.createElement(l.A,{location:d,nodes:E,toc:h}),t.createElement("div",{className:"exercise-content"},t.createElement("header",null,t.createElement("h2",null,m)),p)),t.createElement("nav",{className:"content"},t.createElement("ul",{className:"exercise-nav"},t.createElement("li",null,_&&t.createElement(c.N_,{to:_.fields.slug,rel:"prev"},"← Exercise ",null===(a=_.frontmatter)||void 0===a?void 0:a.exercise," |"," ",null===(e=_.frontmatter)||void 0===e?void 0:e.title)),t.createElement("li",null,y&&t.createElement(c.N_,{to:y.fields.slug,rel:"next"},"Exercise ",null===(s=y.frontmatter)||void 0===s?void 0:s.exercise," |"," ",null===(o=y.frontmatter)||void 0===o?void 0:o.title," →")))))};function d(n){return t.createElement(k,n,t.createElement(p,n))}const m=n=>{let{pageContext:a}=n;const e=`${a.frontmatter.title} | Level ${a.frontmatter.level} | Exercise ${a.frontmatter.exercise}`;return t.createElement(i.A,{title:e},t.createElement("meta",{name:"description",content:a.description}))}},3562:function(n,a,e){function s(n,a){return n.filter((n=>n.fields.slug.includes(`/${a}/`)))}function t(n,a){let e;const s=n.split("/");return a.forEach((n=>{s.includes(n)&&(e=n)})),e}e.d(a,{U:function(){return t},Z:function(){return s}})},6273:function(n,a,e){var s=e(6540),t=e(4810);const o=n=>{let{location:a,nodes:e,toc:o}=n;return e.map(((n,e)=>{const p=a.pathname.includes(n.fields.slug),c=n.frontmatter.title;return s.createElement("li",{className:p?"current":"",key:`exercise-${e}`},s.createElement(t.N_,{to:n.fields.slug},n.frontmatter.exercise," ) ",c),p&&o&&s.createElement("nav",{className:"nav exercise-content-nav"},s.createElement("ul",null,o.map(((n,a)=>s.createElement("li",{key:`toc-${a}`},s.createElement(t.N_,{to:n.url},n.title)))))))}))};a.A=n=>{let{location:a,nodes:e,toc:t}=n;const p=function(n){const a=[];return n.forEach((n=>{a.includes(n.frontmatter.level)||a.push(n.frontmatter.level)})),a}(e);return s.createElement("nav",{className:"nav exercise-nav"},p.map(((n,p)=>{const c=e.filter((a=>a.frontmatter.level===n&&!!a.frontmatter.exercise));return s.createElement("div",{key:`level-${p}`},null!==n&&s.createElement("h3",null,"Level ",n),s.createElement("ul",null,s.createElement(o,{location:a,nodes:c,toc:t})))})))}},7203:function(n,a,e){var s=e(6540);a.A=function(n){let{title:a,subtitle:e}=n;const t=`hero hero-${a.split(" ").join("-").toLowerCase()}`;return s.createElement("article",{className:t},s.createElement("div",{className:"pane"},s.createElement("header",{className:"content"},s.createElement("h2",null,s.createElement("span",{className:"cpx-title"},a))),s.createElement("section",{className:"content"},s.createElement("span",{className:"cpx-title"},e))))}},8453:function(n,a,e){e.d(a,{RP:function(){return o},xA:function(){return c}});var s=e(6540);const t=s.createContext({});function o(n){const a=s.useContext(t);return s.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}const p={};function c({components:n,children:a,disableParentContext:e}){let c;return c=e?"function"==typeof n?n({}):n||p:o(n),s.createElement(t.Provider,{value:c},a)}},8509:function(n,a,e){var s=e(6540),t=e(4810);a.A=function(n){let{title:a,children:e}=n;const o=(0,t.GR)("3103987098");return s.createElement(s.Fragment,null,s.createElement("title",null,a," | ",o.site.siteMetadata.title),e)}},9975:function(n,a,e){e.d(a,{A:function(){return u}});var s=e(6540),t=e(8453);var o=()=>s.createElement("div",{className:"content"},"Thanks! We hope you found what you are looking for. Please feel free to contribute via"," ",s.createElement("a",{href:"https://github.com/MorganStanley/cpx-training",target:"_blank",rel:"noreferrer"},"Github"),"."),p=e(4810);var c=n=>{let{location:a}=n;const e={Learn:"/exercises",Teach:"/teach","Make a Makerspace":"/makerspace",About:"/about"};return s.createElement("div",{className:"content"},s.createElement("h1",null,s.createElement(p.N_,{className:"logo-link",to:"/"},"Makerspace")),s.createElement("div",{className:"header-nav"},s.createElement("ul",null,Object.keys(e).map((function(n){const t=e[n],o=t===a.pathname?"nav-link-current":"nav-link";return s.createElement("li",{key:n},s.createElement(p.N_,{className:o,to:t},n))})))))};function l(n){let{term:a,definition:e}=n;return s.createElement("div",null,s.createElement("dt",null,a),s.createElement("dd",null,e))}var r=function(n){let{name:a,computerType:e,mpType:t,language:o}=n;return s.createElement("div",{className:"summary-card"},s.createElement("h3",null,a),s.createElement("dl",null,e&&s.createElement(l,{term:"Computer",definition:e}),t&&s.createElement(l,{term:"Microprocessor",definition:t}),o&&s.createElement(l,{term:"Language",definition:o})))};const i={Hero:e(7203).A,Link:p.N_,SummaryCard:r,Translations:function(){const n=(0,p.GR)("2398385559").allDirectory.nodes.map((n=>n.base));return s.createElement("ul",null,n.map((n=>{const a=`/exercises/${n}/`;return s.createElement("li",null,s.createElement(p.N_,{to:a},n))})))}};var u=function(n){let{location:a,children:e}=n;return s.createElement("div",{className:"main"},s.createElement("header",{className:"header-main"},s.createElement(c,{location:a})),s.createElement("main",{className:"body-main"},s.createElement(t.xA,{components:i},e)),s.createElement("footer",{className:"footer-main"},s.createElement(o,null)))}}}]);
//# sourceMappingURL=component---src-templates-exercise-jsx-content-file-path-content-exercises-pt-br-circuitpython-robotics-e-14-index-md-1269e4890548b4005ff4.js.map