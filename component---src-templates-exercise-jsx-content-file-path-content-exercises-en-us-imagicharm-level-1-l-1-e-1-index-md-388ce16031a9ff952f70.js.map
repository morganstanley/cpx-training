{"version":3,"file":"component---src-templates-exercise-jsx-content-file-path-content-exercises-en-us-imagicharm-level-1-l-1-e-1-index-md-388ce16031a9ff952f70.js","mappings":"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","sources":["webpack://@morgan-stanley/makerspace/./content/exercises/en-US/imagicharm/level-1/L1-E1/index.md","webpack://@morgan-stanley/makerspace/./src/templates/exercise.jsx","webpack://@morgan-stanley/makerspace/./src/utils/language.js","webpack://@morgan-stanley/makerspace/./src/components/exercise-nav.jsx","webpack://@morgan-stanley/makerspace/./src/components/hero.jsx","webpack://@morgan-stanley/makerspace/./node_modules/@mdx-js/react/lib/index.js","webpack://@morgan-stanley/makerspace/./src/components/head.jsx","webpack://@morgan-stanley/makerspace/./src/components/footer.jsx","webpack://@morgan-stanley/makerspace/./src/components/header.jsx","webpack://@morgan-stanley/makerspace/./src/components/summary-card.jsx","webpack://@morgan-stanley/makerspace/./src/constants/mdx-shortcodes.js","webpack://@morgan-stanley/makerspace/./src/components/translations.jsx","webpack://@morgan-stanley/makerspace/./src/components/layout.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/makerspace/makerspace/site/content/exercises/en-US/imagicharm/level-1/L1-E1/index.md\";\nimport React, {useMemo} from 'react';\nimport {Link, graphql} from 'gatsby';\nimport ExerciseNav from '../components/exercise-nav';\nimport Layout from '../components/layout';\nimport PageHead from '../components/head';\nimport {getCurrentLanguage, getLanguage} from '../utils/language';\nfunction nextPrev(nodes, location) {\n  const len = nodes.length;\n  const current = nodes.findIndex(node => location.pathname.includes(node.fields.slug));\n  const prevNode = current !== 0 ? nodes[current - 1] : false;\n  const nextNode = current !== len - 1 ? nodes[current + 1] : false;\n  return [nextNode, prevNode];\n}\nconst ExerciseTemplate = ({children, data, pageContext, location}) => {\n  const pageTitle = pageContext.frontmatter.title;\n  const toc = data.mdx.tableOfContents.items;\n  const slug = data.mdx.fields.slug;\n  const languages = useMemo(() => data.allDirectory.nodes.map(node => node.base), [data.allDirectory.nodes]);\n  const selectedLanguage = getCurrentLanguage(slug, languages);\n  const nodes = getLanguage(data.allMdx.nodes, selectedLanguage);\n  const [next, previous] = nextPrev(nodes, location);\n  return React.createElement(Layout, {\n    location: location\n  }, React.createElement(\"article\", {\n    className: \"exercise-main content\"\n  }, React.createElement(ExerciseNav, {\n    location: location,\n    nodes: nodes,\n    toc: toc\n  }), React.createElement(\"div\", {\n    className: \"exercise-content\"\n  }, React.createElement(\"header\", null, React.createElement(\"h2\", null, pageTitle)), children)), React.createElement(\"nav\", {\n    className: \"content\"\n  }, React.createElement(\"ul\", {\n    className: \"exercise-nav\"\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \"← Exercise \", previous.frontmatter?.exercise, \" |\", ' ', previous.frontmatter?.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, \"Exercise \", next.frontmatter?.exercise, \" |\", ' ', next.frontmatter?.title, \" →\")))));\n};\nExerciseTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ExerciseTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({pageContext}) => {\n  const title = `${pageContext.frontmatter.title} | Level ${pageContext.frontmatter.level} | Exercise ${pageContext.frontmatter.exercise}`;\n  return React.createElement(PageHead, {\n    title: title\n  }, React.createElement(\"meta\", {\n    name: \"description\",\n    content: pageContext.description\n  }));\n};\nexport const exerciseQuery = graphql`\n  query ($id: String!, $category: String!) {\n    allDirectory(filter: { relativeDirectory: { eq: \"exercises\" } }) {\n      nodes {\n        base\n      }\n    }\n    mdx(id: { eq: $id }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        level\n        exercise\n      }\n      internal {\n        contentFilePath\n      }\n      tableOfContents\n    }\n    allMdx(\n      filter: { frontmatter: { category: { eq: $category } } }\n      sort: [\n        { frontmatter: { level: ASC } }\n        { frontmatter: { exercise: ASC } }\n      ]\n    ) {\n      nodes {\n        id\n        excerpt\n        frontmatter {\n          title\n          exercise\n          level\n          category\n        }\n        internal {\n          contentFilePath\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n","export function getLanguage(docs, language) {\n  return docs.filter((doc) => doc.fields.slug.includes(`/${language}/`));\n}\n\nexport function getCurrentLanguage(slug, languages) {\n  let language;\n  const slugsAr = slug.split('/');\n  languages.forEach((v) => {\n    if (slugsAr.includes(v)) {\n      language = v;\n    }\n  });\n  return language;\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nfunction getLevels(nodes) {\n  const potentialValues = [];\n  nodes.forEach((node) => {\n    if (!potentialValues.includes(node.frontmatter.level)) {\n      potentialValues.push(node.frontmatter.level);\n    }\n  });\n  return potentialValues;\n}\n\nconst ExerciseListItems = ({ location, nodes, toc }) => {\n  return nodes.map((node, i) => {\n    const isCurrentPage = location.pathname.includes(node.fields.slug);\n    const title = node.frontmatter.title;\n    return (\n      <li className={isCurrentPage ? 'current' : ''} key={`exercise-${i}`}>\n        <Link to={node.fields.slug}>\n          {node.frontmatter.exercise} ) {title}\n        </Link>\n        {isCurrentPage && toc && (\n          <nav className=\"nav exercise-content-nav\">\n            <ul>\n              {toc.map((item, j) => (\n                <li key={`toc-${j}`}>\n                  <Link to={item.url}>{item.title}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        )}\n      </li>\n    );\n  });\n};\n\nconst ExerciseNav = ({ location, nodes, toc }) => {\n  const levels = getLevels(nodes);\n\n  return (\n    <nav className=\"nav exercise-nav\">\n      {levels.map((level, i) => {\n        const currentLevel = nodes.filter(\n          (node) =>\n            node.frontmatter.level === level && !!node.frontmatter.exercise\n        );\n        return (\n          <div key={`level-${i}`}>\n            {level !== null && <h3>Level {level}</h3>}\n            <ul>\n              <ExerciseListItems\n                location={location}\n                nodes={currentLevel}\n                toc={toc}\n              />\n            </ul>\n          </div>\n        );\n      })}\n    </nav>\n  );\n};\n\nexport default ExerciseNav;\n","import React from 'react';\n\nfunction Hero({ title, subtitle }) {\n  const classnames = `hero hero-${title.split(' ').join('-').toLowerCase()}`;\n  return (\n    <article className={classnames}>\n      <div className=\"pane\">\n        <header className=\"content\">\n          <h2>\n            <span className=\"cpx-title\">{title}</span>\n          </h2>\n        </header>\n        <section className=\"content\">\n          <span className=\"cpx-title\">{subtitle}</span>\n        </section>\n      </div>\n    </article>\n  );\n}\n\nexport default Hero;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nfunction PageHead({ title, children }) {\n  const data = useStaticQuery(graphql`\n    query sitemetadata {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <title>\n        {title} | {data.site.siteMetadata.title}\n      </title>\n      {children}\n    </>\n  );\n}\n\nexport default PageHead;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className=\"content\">\n      Thanks! We hope you found what you are looking for. Please feel free to\n      contribute via{' '}\n      <a\n        href=\"https://github.com/MorganStanley/cpx-training\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Github\n      </a>\n      .\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Header = ({ location }) => {\n  const links = {\n    Learn: '/exercises',\n    Teach: '/teach',\n    'Make a Makerspace': '/makerspace',\n    'About': '/about',\n  };\n\n  function menuLink(text) {\n    const path = links[text];\n    const classname =\n      path === location.pathname ? 'nav-link-current' : 'nav-link';\n\n    return (\n      <li key={text}>\n        <Link className={classname} to={path}>\n          {text}\n        </Link>\n      </li>\n    );\n  }\n\n  return (\n    <div className=\"content\">\n      <h1>\n        <Link className=\"logo-link\" to={`/`}>\n          Makerspace\n        </Link>\n      </h1>\n\n      <div className=\"header-nav\">\n        <ul>{Object.keys(links).map(menuLink)}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react'\n\nfunction SummaryRow({ term, definition }) {\n  return (\n    <div>\n      <dt>{term}</dt>\n      <dd>{definition}</dd>\n    </div>\n  )\n}\n\nfunction SummaryCard({ name, computerType, mpType, language }) {\n  return (\n    <div className=\"summary-card\">\n      <h3>{name}</h3>\n      <dl>\n        {computerType && (\n          <SummaryRow term=\"Computer\" definition={computerType} />\n        )}\n        {mpType && <SummaryRow term=\"Microprocessor\" definition={mpType} />}\n        {language && <SummaryRow term=\"Language\" definition={language} />}\n      </dl>\n    </div>\n  )\n}\n\nexport default SummaryCard\n","import { Link } from 'gatsby';\nimport Hero from '../components/hero';\nimport SummaryCard from '../components/summary-card';\nimport Translations from '../components/translations';\n\nexport const SHORTCODES = { Hero, Link, SummaryCard, Translations };\n","import React from 'react';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\n\nexport default function Translations() {\n  const data = useStaticQuery(graphql`\n    query TranslationsQuery {\n      allDirectory(filter: { relativeDirectory: { eq: \"exercises\" } }) {\n        nodes {\n          base\n        }\n      }\n    }\n  `);\n\n  const translations = data.allDirectory.nodes.map((node) => node.base);\n\n  return (\n    <ul>\n      {translations.map((translation) => {\n        const url = `/exercises/${translation}/`;\n        return (\n          <li>\n            <Link to={url}>{translation}</Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { MDXProvider } from '@mdx-js/react';\n\nimport Footer from './footer';\nimport Header from './header';\n\nimport { SHORTCODES } from '../constants/mdx-shortcodes';\n\nimport '../styles/global.css';\nimport '../styles/style.css';\n\nfunction Layout({ location, children }) {\n  return (\n    <div className=\"main\">\n      <header className=\"header-main\">\n        <Header location={location} />\n      </header>\n      <main className=\"body-main\">\n        <MDXProvider components={SHORTCODES}>{children}</MDXProvider>\n      </main>\n      <footer className=\"footer-main\">\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default Layout;\n"],"names":["_createMdxContent","props","React","wrapper","MDXLayout","Object","assign","_provideComponents","components","ExerciseTemplate","_ref","_previous$frontmatter","_previous$frontmatter2","_next$frontmatter","_next$frontmatter2","children","data","pageContext","location","pageTitle","frontmatter","title","toc","mdx","tableOfContents","items","slug","fields","languages","useMemo","allDirectory","nodes","map","node","base","selectedLanguage","getCurrentLanguage","getLanguage","allMdx","next","previous","len","length","current","findIndex","pathname","includes","prevNode","nextPrev","Layout","className","ExerciseNav","Link","to","rel","exercise","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","level","PageHead","name","content","description","docs","language","filter","doc","slugsAr","split","forEach","v","ExerciseListItems","i","isCurrentPage","key","item","j","url","levels","potentialValues","push","getLevels","currentLevel","subtitle","classnames","join","toLowerCase","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value","useStaticQuery","site","siteMetadata","Footer","href","target","links","Learn","Teach","keys","text","path","classname","SummaryRow","term","definition","computerType","mpType","SHORTCODES","Hero","SummaryCard","Translations","translations","translation","Header"],"sourceRoot":""}