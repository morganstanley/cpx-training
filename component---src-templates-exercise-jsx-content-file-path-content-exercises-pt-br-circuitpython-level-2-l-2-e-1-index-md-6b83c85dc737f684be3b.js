"use strict";(self.webpackChunk_morgan_stanley_makerspace=self.webpackChunk_morgan_stanley_makerspace||[]).push([[4310],{24:function(n,s,a){a.r(s),a.d(s,{Head:function(){return b},default:function(){return m}});var t=a(8453),e=a(6540);function p(n){const s=Object.assign({p:"p",h2:"h2",a:"a",span:"span",ul:"ul",li:"li"},(0,t.RP)(),n.components);return e.createElement(e.Fragment,null,e.createElement(s.p,null,"No nível 1, abordamos os recursos do Circuit Playground Express, mas não nos aprofundamos nos conceitos básicos de programação. Esses conceitos estão presentes em todas as linguagens de programação, de alguma forma."),"\n",e.createElement(s.p,null,"Nesta aula, aprenderemos sobre variáveis ​​e como podemos usá-las para armazenar informações para usá-las novamente mais tarde."),"\n",e.createElement(s.h2,{id:"variáveis-de-cor",style:{position:"relative"}},e.createElement(s.a,{href:"#vari%C3%A1veis-de-cor","aria-label":"variáveis de cor permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Variáveis ​​de Cor"),"\n",e.createElement(s.p,null,e.createElement(s.a,{href:"../../level-1/L1-E2"},"Do nível 1 exercício 2"),", colocamos o seguinte programa no CPX:"),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">import</span> board\n<span class="token keyword">import</span> neopixel\n\npixels <span class="token operator">=</span> neopixel<span class="token punctuation">.</span>NeoPixel<span class="token punctuation">(</span>board<span class="token punctuation">.</span>NEOPIXEL<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> brightness<span class="token operator">=</span><span class="token number">.1</span><span class="token punctuation">)</span>\npixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\npixels<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    pixels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",e.createElement(s.p,null,"O que esses números significam? Como podemos tornar isso mais legível?"),"\n",e.createElement(s.p,null,"Faça uma lista de variáveis ​​de cores por nome de cor."),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">import</span> board\n<span class="token keyword">import</span> neopixel\n\npixels <span class="token operator">=</span> neopixel<span class="token punctuation">.</span>NeoPixel<span class="token punctuation">(</span>board<span class="token punctuation">.</span>NEOPIXEL<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> brightness<span class="token operator">=</span><span class="token number">.1</span><span class="token punctuation">)</span>\n\n<span class="token comment"># Cores</span>\nBLACK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nRED <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nPINK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>\nORANGE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nYELLOW <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nGREEN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nCYAN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nPURPLE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nBLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nLIGHT_BLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span>\nWHITE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n\npixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span>\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    pixels<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> RED\n    pixels<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> ORANGE\n    pixels<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> GREEN\n    pixels<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> CYAN\n    pixels<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> PURPLE\n    pixels<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> BLUE\n    pixels<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> WHITE\n    pixels<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> YELLOW\n    pixels<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> PINK\n    pixels<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> LIGHT_BLUE\n    pixels<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,"Uma variável é usada para armazenar dados a serem usados ​​pelo programa."),"\n",e.createElement(s.li,null,"Esses dados podem ser um número, uma string, um booleano, uma lista ou algum outro tipo de dado."),"\n",e.createElement(s.li,null,"Cada variável tem um nome que pode consistir em letras, números e o caractere sublinhado (_)."),"\n",e.createElement(s.li,null,"Nenhum outro tipo de caractere pode ser usado para criar o nome da variável e a variável NÃO pode começar com um número."),"\n",e.createElement(s.li,null,"O sinal de igual = é usado para atribuir um valor a uma variável."),"\n",e.createElement(s.li,null,"Essa atribuição pode ser de um valor fixo ou retirada de outra variável existente."),"\n",e.createElement(s.li,null,"Também pode ser usado para alterar o valor de uma variável de um valor para outro após a atribuição inicial ser feita."),"\n"),"\n",e.createElement(s.h2,{id:"trabalhando-com-listas",style:{position:"relative"}},e.createElement(s.a,{href:"#trabalhando-com-listas","aria-label":"trabalhando com listas permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Trabalhando com listas"),"\n",e.createElement(s.p,null,"No final chegamos a isto:"),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token comment"># Aprenda mais em https://realpython.com/python-variables/</span>\n<span class="token comment"># e https://realpython.com/python-data-types/</span>\n<span class="token keyword">import</span> time\n\n<span class="token keyword">import</span> board\n<span class="token keyword">import</span> neopixel\n\npixels <span class="token operator">=</span> neopixel<span class="token punctuation">.</span>NeoPixel<span class="token punctuation">(</span>board<span class="token punctuation">.</span>NEOPIXEL<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> brightness<span class="token operator">=</span><span class="token number">.1</span><span class="token punctuation">)</span>\n\n<span class="token comment"># Cores</span>\nBLACK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nRED <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nPINK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>\nORANGE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nYELLOW <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nGREEN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nCYAN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nPURPLE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nBLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nLIGHT_BLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span>\nWHITE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n\npixels <span class="token operator">=</span> pixels\npixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span>\npixels<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>pixels<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        pixels<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> RED\n        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">.05</span><span class="token punctuation">)</span>\n    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>pixels<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        pixels<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> GREEN\n        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">.05</span><span class="token punctuation">)</span>\n    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",e.createElement(s.p,null,"Como podemos simplificar isso para que não tenhamos que inserir uma cor para cada bloco ",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">for</code>'}}),"?"),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">import</span> time\n\n<span class="token keyword">import</span> board\n<span class="token keyword">import</span> neopixel\n\npixels <span class="token operator">=</span> neopixel<span class="token punctuation">.</span>NeoPixel<span class="token punctuation">(</span>board<span class="token punctuation">.</span>NEOPIXEL<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> brightness<span class="token operator">=</span><span class="token number">.1</span><span class="token punctuation">)</span>\n\n<span class="token comment"># Cores</span>\nBLACK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nRED <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nPINK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>\nORANGE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nYELLOW <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nGREEN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nCYAN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nPURPLE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nBLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nLIGHT_BLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span>\nWHITE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n\ncolors <span class="token operator">=</span> <span class="token punctuation">[</span>\n    PINK<span class="token punctuation">,</span>\n    RED<span class="token punctuation">,</span>\n    ORANGE<span class="token punctuation">,</span>\n    YELLOW<span class="token punctuation">,</span>\n    GREEN<span class="token punctuation">,</span>\n    CYAN<span class="token punctuation">,</span>\n    PURPLE<span class="token punctuation">,</span>\n    BLUE<span class="token punctuation">,</span>\n    LIGHT_BLUE<span class="token punctuation">,</span>\n    WHITE\n<span class="token punctuation">]</span>\n\npixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span>\npixels<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>pixels<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        pixels<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> colors<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">.05</span><span class="token punctuation">)</span>\n    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n</code></pre></div>'}}))}var o=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.RP)(),n.components);return s?e.createElement(s,n,e.createElement(p,n)):p(n)},c=a(4810),l=a(6273),u=a(9975),r=a(8509),i=a(3562);const k=n=>{var s,a,t,p;let{children:o,data:r,pageContext:k,location:m}=n;const b=k.frontmatter.title,d=r.mdx.tableOfContents.items,E=r.mdx.fields.slug,h=(0,e.useMemo)((()=>r.allDirectory.nodes.map((n=>n.base))),[r.allDirectory.nodes]),v=(0,i.U)(E,h),f=(0,i.Z)(r.allMdx.nodes,v),[g,x]=function(n,s){const a=n.length,t=n.findIndex((n=>s.pathname.includes(n.fields.slug))),e=0!==t&&n[t-1];return[t!==a-1&&n[t+1],e]}(f,m);return e.createElement(u.A,{location:m},e.createElement("article",{className:"exercise-main content"},e.createElement(l.A,{location:m,nodes:f,toc:d}),e.createElement("div",{className:"exercise-content"},e.createElement("header",null,e.createElement("h2",null,b)),o)),e.createElement("nav",{className:"content"},e.createElement("ul",{className:"exercise-nav"},e.createElement("li",null,x&&e.createElement(c.N_,{to:x.fields.slug,rel:"prev"},"← Exercise ",null===(s=x.frontmatter)||void 0===s?void 0:s.exercise," |"," ",null===(a=x.frontmatter)||void 0===a?void 0:a.title)),e.createElement("li",null,g&&e.createElement(c.N_,{to:g.fields.slug,rel:"next"},"Exercise ",null===(t=g.frontmatter)||void 0===t?void 0:t.exercise," |"," ",null===(p=g.frontmatter)||void 0===p?void 0:p.title," →")))))};function m(n){return e.createElement(k,n,e.createElement(o,n))}const b=n=>{let{pageContext:s}=n;const a=`${s.frontmatter.title} | Level ${s.frontmatter.level} | Exercise ${s.frontmatter.exercise}`;return e.createElement(r.A,{title:a},e.createElement("meta",{name:"description",content:s.description}))}},3562:function(n,s,a){function t(n,s){return n.filter((n=>n.fields.slug.includes(`/${s}/`)))}function e(n,s){let a;const t=n.split("/");return s.forEach((n=>{t.includes(n)&&(a=n)})),a}a.d(s,{U:function(){return e},Z:function(){return t}})},6273:function(n,s,a){var t=a(6540),e=a(4810);const p=n=>{let{location:s,nodes:a,toc:p}=n;return a.map(((n,a)=>{const o=s.pathname.includes(n.fields.slug),c=n.frontmatter.title;return t.createElement("li",{className:o?"current":"",key:`exercise-${a}`},t.createElement(e.N_,{to:n.fields.slug},n.frontmatter.exercise," ) ",c),o&&p&&t.createElement("nav",{className:"nav exercise-content-nav"},t.createElement("ul",null,p.map(((n,s)=>t.createElement("li",{key:`toc-${s}`},t.createElement(e.N_,{to:n.url},n.title)))))))}))};s.A=n=>{let{location:s,nodes:a,toc:e}=n;const o=function(n){const s=[];return n.forEach((n=>{s.includes(n.frontmatter.level)||s.push(n.frontmatter.level)})),s}(a);return t.createElement("nav",{className:"nav exercise-nav"},o.map(((n,o)=>{const c=a.filter((s=>s.frontmatter.level===n&&!!s.frontmatter.exercise));return t.createElement("div",{key:`level-${o}`},null!==n&&t.createElement("h3",null,"Level ",n),t.createElement("ul",null,t.createElement(p,{location:s,nodes:c,toc:e})))})))}},7203:function(n,s,a){var t=a(6540);s.A=function(n){let{title:s,subtitle:a}=n;const e=`hero hero-${s.split(" ").join("-").toLowerCase()}`;return t.createElement("article",{className:e},t.createElement("div",{className:"pane"},t.createElement("header",{className:"content"},t.createElement("h2",null,t.createElement("span",{className:"cpx-title"},s))),t.createElement("section",{className:"content"},t.createElement("span",{className:"cpx-title"},a))))}},8453:function(n,s,a){a.d(s,{RP:function(){return p},xA:function(){return c}});var t=a(6540);const e=t.createContext({});function p(n){const s=t.useContext(e);return t.useMemo((()=>"function"==typeof n?n(s):{...s,...n}),[s,n])}const o={};function c({components:n,children:s,disableParentContext:a}){let c;return c=a?"function"==typeof n?n({}):n||o:p(n),t.createElement(e.Provider,{value:c},s)}},8509:function(n,s,a){var t=a(6540),e=a(4810);s.A=function(n){let{title:s,children:a}=n;const p=(0,e.GR)("3103987098");return t.createElement(t.Fragment,null,t.createElement("title",null,s," | ",p.site.siteMetadata.title),a)}},9975:function(n,s,a){a.d(s,{A:function(){return i}});var t=a(6540),e=a(8453);var p=()=>t.createElement("div",{className:"content"},"Thanks! We hope you found what you are looking for. Please feel free to contribute via"," ",t.createElement("a",{href:"https://github.com/MorganStanley/cpx-training",target:"_blank",rel:"noreferrer"},"Github"),"."),o=a(4810);var c=n=>{let{location:s}=n;const a={Learn:"/exercises",Teach:"/teach","Make a Makerspace":"/makerspace",About:"/about"};return t.createElement("div",{className:"content"},t.createElement("h1",null,t.createElement(o.N_,{className:"logo-link",to:"/"},"Makerspace")),t.createElement("div",{className:"header-nav"},t.createElement("ul",null,Object.keys(a).map((function(n){const e=a[n],p=e===s.pathname?"nav-link-current":"nav-link";return t.createElement("li",{key:n},t.createElement(o.N_,{className:p,to:e},n))})))))};function l(n){let{term:s,definition:a}=n;return t.createElement("div",null,t.createElement("dt",null,s),t.createElement("dd",null,a))}var u=function(n){let{name:s,computerType:a,mpType:e,language:p}=n;return t.createElement("div",{className:"summary-card"},t.createElement("h3",null,s),t.createElement("dl",null,a&&t.createElement(l,{term:"Computer",definition:a}),e&&t.createElement(l,{term:"Microprocessor",definition:e}),p&&t.createElement(l,{term:"Language",definition:p})))};const r={Hero:a(7203).A,Link:o.N_,SummaryCard:u,Translations:function(){const n=(0,o.GR)("2398385559").allDirectory.nodes.map((n=>n.base));return t.createElement("ul",null,n.map((n=>{const s=`/exercises/${n}/`;return t.createElement("li",null,t.createElement(o.N_,{to:s},n))})))}};var i=function(n){let{location:s,children:a}=n;return t.createElement("div",{className:"main"},t.createElement("header",{className:"header-main"},t.createElement(c,{location:s})),t.createElement("main",{className:"body-main"},t.createElement(e.xA,{components:r},a)),t.createElement("footer",{className:"footer-main"},t.createElement(p,null)))}}}]);
//# sourceMappingURL=component---src-templates-exercise-jsx-content-file-path-content-exercises-pt-br-circuitpython-level-2-l-2-e-1-index-md-6b83c85dc737f684be3b.js.map