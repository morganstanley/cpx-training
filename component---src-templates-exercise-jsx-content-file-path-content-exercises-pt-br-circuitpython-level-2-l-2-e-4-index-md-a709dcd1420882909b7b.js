"use strict";(self.webpackChunk_morgan_stanley_makerspace=self.webpackChunk_morgan_stanley_makerspace||[]).push([[6085],{3562:function(n,s,a){function t(n,s){return n.filter((n=>n.fields.slug.includes(`/${s}/`)))}function e(n,s){let a;const t=n.split("/");return s.forEach((n=>{t.includes(n)&&(a=n)})),a}a.d(s,{U:function(){return e},Z:function(){return t}})},6273:function(n,s,a){var t=a(6540),e=a(4810);const p=n=>{let{location:s,nodes:a,toc:p}=n;return a.map(((n,a)=>{const o=s.pathname.includes(n.fields.slug),c=n.frontmatter.title;return t.createElement("li",{className:o?"current":"",key:`exercise-${a}`},t.createElement(e.N_,{to:n.fields.slug},n.frontmatter.exercise," ) ",c),o&&p&&t.createElement("nav",{className:"nav exercise-content-nav"},t.createElement("ul",null,p.map(((n,s)=>t.createElement("li",{key:`toc-${s}`},t.createElement(e.N_,{to:n.url},n.title)))))))}))};s.A=n=>{let{location:s,nodes:a,toc:e}=n;const o=function(n){const s=[];return n.forEach((n=>{s.includes(n.frontmatter.level)||s.push(n.frontmatter.level)})),s}(a);return t.createElement("nav",{className:"nav exercise-nav"},o.map(((n,o)=>{const c=a.filter((s=>s.frontmatter.level===n&&!!s.frontmatter.exercise));return t.createElement("div",{key:`level-${o}`},null!==n&&t.createElement("h3",null,"Level ",n),t.createElement("ul",null,t.createElement(p,{location:s,nodes:c,toc:e})))})))}},7203:function(n,s,a){var t=a(6540);s.A=function(n){let{title:s,subtitle:a}=n;const e=`hero hero-${s.split(" ").join("-").toLowerCase()}`;return t.createElement("article",{className:e},t.createElement("div",{className:"pane"},t.createElement("header",{className:"content"},t.createElement("h2",null,t.createElement("span",{className:"cpx-title"},s))),t.createElement("section",{className:"content"},t.createElement("span",{className:"cpx-title"},a))))}},8453:function(n,s,a){a.d(s,{RP:function(){return p},xA:function(){return c}});var t=a(6540);const e=t.createContext({});function p(n){const s=t.useContext(e);return t.useMemo((()=>"function"==typeof n?n(s):{...s,...n}),[s,n])}const o={};function c({components:n,children:s,disableParentContext:a}){let c;return c=a?"function"==typeof n?n({}):n||o:p(n),t.createElement(e.Provider,{value:c},s)}},8509:function(n,s,a){var t=a(6540),e=a(4810);s.A=function(n){let{title:s,children:a}=n;const p=(0,e.GR)("3103987098");return t.createElement(t.Fragment,null,t.createElement("title",null,s," | ",p.site.siteMetadata.title),a)}},8826:function(n,s,a){a.r(s),a.d(s,{Head:function(){return d},default:function(){return m}});var t=a(8453),e=a(6540);function p(n){const s=Object.assign({p:"p",a:"a",span:"span",ul:"ul",li:"li",strong:"strong"},(0,t.RP)(),n.components);return e.createElement(e.Fragment,null,e.createElement(s.p,null,"Vamos começar por ",e.createElement(s.a,{href:"../L2-E1"},"onde paramos em variáveis"),"."),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">my_function</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">1</span>\n\n<span class="token keyword">def</span> <span class="token function">findvolume</span><span class="token punctuation">(</span>length<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> depth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Length = "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Width = "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Depth = "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>depth<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> length <span class="token operator">*</span> width <span class="token operator">*</span> depth\n\nfindvolume<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>\nfindvolume<span class="token punctuation">(</span>length<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> depth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>\nfindvolume<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> depth<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,"Algumas tarefas precisam ser executadas várias vezes em um programa."),"\n",e.createElement(s.li,null,"Em vez de reescrever o mesmo código em vários lugares, uma função pode ser definida usando a palavra-chave def."),"\n",e.createElement(s.li,null,"As definições de função podem incluir parâmetros, fornecendo dados de entrada para a função."),"\n",e.createElement(s.li,null,"As funções podem retornar um valor usando a palavra-chave return seguida do valor a ser retornado."),"\n"),"\n",e.createElement(s.p,null,e.createElement(s.strong,null,"Chamando a função"),": ",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">makeLight()</code>'}})," escrevendo o nome da função seguido de parênteses"),"\n",e.createElement(s.p,null,e.createElement(s.strong,null,"Definindo a função"),": palavra-chave ",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">def</code>'}})," seguida do nome da função, parênteses e dois pontos"),"\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,"O corpo da função, ou o código que a função realmente executará, vem depois dos dois pontos em uma linha ",e.createElement(s.strong,null,"recuada")),"\n"),"\n",e.createElement(s.p,null,e.createElement(s.strong,null,"Paramêtros da função"),":"),"\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,"Às vezes, funções requerem entrada para fornecer dados para seu código. Essa entrada é definida por meio de parâmetros."),"\n",e.createElement(s.li,null,"Parâmetros são variáveis ​​definidas na definição da função."),"\n",e.createElement(s.li,null,"A eles são atribuídos os valores que foram passados ​​como argumentos quando a função foi chamada, em outro lugar no código."),"\n"),"\n",e.createElement(s.p,null,e.createElement(s.strong,null,"Argumentos da função"),":"),"\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,"Parâmetros em Python são variáveis ​​— espaços reservados para os valores reais que a função precisa."),"\n",e.createElement(s.li,null,"Quando a função é chamada, esses valores são passados ​​como argumentos."),"\n"),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">import</span> time\n\n<span class="token keyword">import</span> board\n<span class="token keyword">import</span> neopixel\n\npixels <span class="token operator">=</span> neopixel<span class="token punctuation">.</span>NeoPixel<span class="token punctuation">(</span>board<span class="token punctuation">.</span>NEOPIXEL<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> brightness<span class="token operator">=</span><span class="token number">.1</span><span class="token punctuation">)</span>\n\n<span class="token comment"># Cores</span>\nBLACK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nRED <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nPINK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>\nORANGE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nYELLOW <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nGREEN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\nCYAN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nPURPLE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nBLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\nLIGHT_BLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span>\nWHITE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n\ncolors <span class="token operator">=</span> <span class="token punctuation">[</span>\n    PINK<span class="token punctuation">,</span>\n    RED<span class="token punctuation">,</span>\n    ORANGE<span class="token punctuation">,</span>\n    YELLOW<span class="token punctuation">,</span>\n    GREEN<span class="token punctuation">,</span>\n    CYAN<span class="token punctuation">,</span>\n    PURPLE<span class="token punctuation">,</span>\n    BLUE<span class="token punctuation">,</span>\n    LIGHT_BLUE<span class="token punctuation">,</span>\n    WHITE\n<span class="token punctuation">]</span>\n\npixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>BLACK<span class="token punctuation">)</span>\npixels<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>pixels<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        pixels<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> colors<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">.05</span><span class="token punctuation">)</span>\n    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n</code></pre></div>'}}),"\n",e.createElement(s.p,null,"E faça uma função do comportamento:"),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">simpleCircle</span><span class="token punctuation">(</span>wait<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token comment"># Cores</span>\n    RED <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    PINK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>\n    ORANGE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    YELLOW <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    GREEN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    CYAN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    PURPLE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    BLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    LIGHT_BLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span>\n    WHITE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n\n    colors <span class="token operator">=</span> <span class="token punctuation">[</span>\n        PINK<span class="token punctuation">,</span>\n        RED<span class="token punctuation">,</span>\n        ORANGE<span class="token punctuation">,</span>\n        YELLOW<span class="token punctuation">,</span>\n        GREEN<span class="token punctuation">,</span>\n        CYAN<span class="token punctuation">,</span>\n        PURPLE<span class="token punctuation">,</span>\n        BLUE<span class="token punctuation">,</span>\n        LIGHT_BLUE<span class="token punctuation">,</span>\n        WHITE\n    <span class="token punctuation">]</span>\n\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>pixels<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        pixels<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> colors<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">.05</span><span class="token punctuation">)</span>\n    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",e.createElement(s.p,null,"Como usar:"),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token comment"># CircuitPlaygroundExpress_NeoPixel</span>\n<span class="token comment"># https://learn.adafruit.com/adafruit-circuit-playground-express/circuitpython-neopixel</span>\n\n<span class="token keyword">import</span> time\n\n<span class="token keyword">import</span> board\n<span class="token keyword">import</span> neopixel\n\npixels <span class="token operator">=</span> neopixel<span class="token punctuation">.</span>NeoPixel<span class="token punctuation">(</span>board<span class="token punctuation">.</span>NEOPIXEL<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> brightness<span class="token operator">=</span><span class="token number">.1</span><span class="token punctuation">)</span>\npixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\npixels<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment"># escolha quais demos tocar</span>\n<span class="token comment"># 1 significa tocar, 0 significa não tocar!</span>\nsimpleCircleDemo <span class="token operator">=</span> <span class="token number">1</span>\n\n<span class="token keyword">def</span> <span class="token function">simpleCircle</span><span class="token punctuation">(</span>wait<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token comment"># Cores</span>\n    RED <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    PINK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>\n    ORANGE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    YELLOW <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    GREEN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    CYAN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    PURPLE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    BLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    LIGHT_BLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span>\n    WHITE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n\n    colors <span class="token operator">=</span> <span class="token punctuation">[</span>\n        PINK<span class="token punctuation">,</span>\n        RED<span class="token punctuation">,</span>\n        ORANGE<span class="token punctuation">,</span>\n        YELLOW<span class="token punctuation">,</span>\n        GREEN<span class="token punctuation">,</span>\n        CYAN<span class="token punctuation">,</span>\n        PURPLE<span class="token punctuation">,</span>\n        BLUE<span class="token punctuation">,</span>\n        LIGHT_BLUE<span class="token punctuation">,</span>\n        WHITE\n    <span class="token punctuation">]</span>\n\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>pixels<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        pixels<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> colors<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>wait<span class="token punctuation">)</span>\n    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n\n\n<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>\n    <span class="token keyword">if</span> simpleCircleDemo<span class="token punctuation">:</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">\'Simple Circle Demo\'</span><span class="token punctuation">)</span>\n        simpleCircle<span class="token punctuation">(</span><span class="token number">.05</span><span class="token punctuation">)</span>\n    pixels<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}))}var o=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.RP)(),n.components);return s?e.createElement(s,n,e.createElement(p,n)):p(n)},c=a(4810),l=a(6273),u=a(9975),r=a(8509),i=a(3562);const k=n=>{var s,a,t,p;let{children:o,data:r,pageContext:k,location:m}=n;const d=k.frontmatter.title,E=r.mdx.tableOfContents.items,b=r.mdx.fields.slug,f=(0,e.useMemo)((()=>r.allDirectory.nodes.map((n=>n.base))),[r.allDirectory.nodes]),g=(0,i.U)(b,f),h=(0,i.Z)(r.allMdx.nodes,g),[v,y]=function(n,s){const a=n.length,t=n.findIndex((n=>s.pathname.includes(n.fields.slug))),e=0!==t&&n[t-1];return[t!==a-1&&n[t+1],e]}(h,m);return e.createElement(u.A,{location:m},e.createElement("article",{className:"exercise-main content"},e.createElement(l.A,{location:m,nodes:h,toc:E}),e.createElement("div",{className:"exercise-content"},e.createElement("header",null,e.createElement("h2",null,d)),o)),e.createElement("nav",{className:"content"},e.createElement("ul",{className:"exercise-nav"},e.createElement("li",null,y&&e.createElement(c.N_,{to:y.fields.slug,rel:"prev"},"← Exercise ",null===(s=y.frontmatter)||void 0===s?void 0:s.exercise," |"," ",null===(a=y.frontmatter)||void 0===a?void 0:a.title)),e.createElement("li",null,v&&e.createElement(c.N_,{to:v.fields.slug,rel:"next"},"Exercise ",null===(t=v.frontmatter)||void 0===t?void 0:t.exercise," |"," ",null===(p=v.frontmatter)||void 0===p?void 0:p.title," →")))))};function m(n){return e.createElement(k,n,e.createElement(o,n))}const d=n=>{let{pageContext:s}=n;const a=`${s.frontmatter.title} | Level ${s.frontmatter.level} | Exercise ${s.frontmatter.exercise}`;return e.createElement(r.A,{title:a},e.createElement("meta",{name:"description",content:s.description}))}},9975:function(n,s,a){a.d(s,{A:function(){return i}});var t=a(6540),e=a(8453);var p=()=>t.createElement("div",{className:"content"},"Thanks! We hope you found what you are looking for. Please feel free to contribute via"," ",t.createElement("a",{href:"https://github.com/MorganStanley/cpx-training",target:"_blank",rel:"noreferrer"},"Github"),"."),o=a(4810);var c=n=>{let{location:s}=n;const a={Learn:"/exercises",Teach:"/teach","Make a Makerspace":"/makerspace",About:"/about"};return t.createElement("div",{className:"content"},t.createElement("h1",null,t.createElement(o.N_,{className:"logo-link",to:"/"},"Makerspace")),t.createElement("div",{className:"header-nav"},t.createElement("ul",null,Object.keys(a).map((function(n){const e=a[n],p=e===s.pathname?"nav-link-current":"nav-link";return t.createElement("li",{key:n},t.createElement(o.N_,{className:p,to:e},n))})))))};function l(n){let{term:s,definition:a}=n;return t.createElement("div",null,t.createElement("dt",null,s),t.createElement("dd",null,a))}var u=function(n){let{name:s,computerType:a,mpType:e,language:p}=n;return t.createElement("div",{className:"summary-card"},t.createElement("h3",null,s),t.createElement("dl",null,a&&t.createElement(l,{term:"Computer",definition:a}),e&&t.createElement(l,{term:"Microprocessor",definition:e}),p&&t.createElement(l,{term:"Language",definition:p})))};const r={Hero:a(7203).A,Link:o.N_,SummaryCard:u,Translations:function(){const n=(0,o.GR)("2398385559").allDirectory.nodes.map((n=>n.base));return t.createElement("ul",null,n.map((n=>{const s=`/exercises/${n}/`;return t.createElement("li",null,t.createElement(o.N_,{to:s},n))})))}};var i=function(n){let{location:s,children:a}=n;return t.createElement("div",{className:"main"},t.createElement("header",{className:"header-main"},t.createElement(c,{location:s})),t.createElement("main",{className:"body-main"},t.createElement(e.xA,{components:r},a)),t.createElement("footer",{className:"footer-main"},t.createElement(p,null)))}}}]);
//# sourceMappingURL=component---src-templates-exercise-jsx-content-file-path-content-exercises-pt-br-circuitpython-level-2-l-2-e-4-index-md-a709dcd1420882909b7b.js.map