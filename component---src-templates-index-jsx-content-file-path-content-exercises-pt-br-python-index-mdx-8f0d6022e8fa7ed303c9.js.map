{"version":3,"file":"component---src-templates-index-jsx-content-file-path-content-exercises-pt-br-python-index-mdx-8f0d6022e8fa7ed303c9.js","mappings":"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","sources":["webpack://@morgan-stanley/makerspace/./content/exercises/pt-BR/python/index.mdx","webpack://@morgan-stanley/makerspace/./src/templates/index.jsx","webpack://@morgan-stanley/makerspace/./src/utils/language.js","webpack://@morgan-stanley/makerspace/./src/components/site-map.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/makerspace/makerspace/site/content/exercises/pt-BR/python/index.mdx\";\nimport React, {useMemo} from 'react';\nimport {graphql} from 'gatsby';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport Hero from '../components/hero';\nimport Layout from '../components/layout';\nimport PageHead from '../components/head';\nimport SiteMap from '../components/site-map';\nimport {getCurrentLanguage, getLanguage} from '../utils/language';\nconst ExerciseIndexTemplate = ({children, data, pageContext, location}) => {\n  const pageTitle = pageContext.frontmatter.title;\n  const subTitle = pageContext.frontmatter.subtitle ? pageContext.frontmatter.subtitle : '';\n  const heroImage = getImage(pageContext.frontmatter.heroImage);\n  const category = pageContext.frontmatter.category;\n  const level = pageContext.frontmatter.level;\n  const slug = data.mdx.fields.slug;\n  const languages = useMemo(() => data.allDirectory.nodes.map(node => node.base), [data.allDirectory.nodes]);\n  const selectedLanguage = getCurrentLanguage(slug, languages);\n  const nodes = getLanguage(data.allMdx.nodes, selectedLanguage).filter(node => node.frontmatter.category === category && node.frontmatter.level === level && !!node.frontmatter.exercise);\n  return React.createElement(Layout, {\n    location: location\n  }, React.createElement(GatsbyImage, {\n    image: heroImage,\n    alt: \"\"\n  }), React.createElement(Hero, {\n    title: pageTitle,\n    subtitle: subTitle\n  }), React.createElement(\"div\", {\n    className: \"content\"\n  }, children), React.createElement(\"div\", {\n    className: \"content\"\n  }, React.createElement(SiteMap, {\n    location: location,\n    nodes: nodes\n  })));\n};\nExerciseIndexTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ExerciseIndexTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({pageContext}) => React.createElement(PageHead, {\n  title: pageContext.frontmatter.title\n}, React.createElement(\"meta\", {\n  name: \"description\",\n  content: pageContext?.description\n}));\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    allDirectory(filter: { relativeDirectory: { eq: \"exercises\" } }) {\n      nodes {\n        base\n      }\n    }\n    mdx(id: { eq: $id }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        subtitle\n        description\n        category\n        level\n      }\n      tableOfContents\n    }\n    allMdx(\n      sort: [\n        { frontmatter: { level: ASC } }\n        { frontmatter: { exercise: ASC } }\n      ]\n    ) {\n      nodes {\n        id\n        tableOfContents\n        frontmatter {\n          title\n          exercise\n          level\n          category\n        }\n        internal {\n          contentFilePath\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n","export function getLanguage(docs, language) {\n  return docs.filter((doc) => doc.fields.slug.includes(`/${language}/`));\n}\n\nexport function getCurrentLanguage(slug, languages) {\n  let language;\n  const slugsAr = slug.split('/');\n  languages.forEach((v) => {\n    if (slugsAr.includes(v)) {\n      language = v;\n    }\n  });\n  return language;\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nfunction getCategories(nodes) {\n  const potentialValues = [];\n  nodes.forEach((node) => {\n    const cat = node.frontmatter.category;\n    if (typeof cat !== 'undefined' && !potentialValues.includes(cat)) {\n      potentialValues.push(cat);\n    }\n  });\n  return potentialValues;\n}\n\nfunction getLevels(nodes) {\n  const potentialValues = [];\n  nodes.forEach((node) => {\n    const level = node.frontmatter.level;\n    if (typeof level !== 'undefined' && !potentialValues.includes(level)) {\n      potentialValues.push(level);\n    }\n  });\n  return potentialValues;\n}\n\nconst PageListItems = ({ nodes }) => {\n  return nodes.map((node, i) => {\n    const title = node.frontmatter.title;\n    const exercise = node.frontmatter.exercise;\n    const toc = node.tableOfContents.items;\n    return (\n      <li key={`exercise-${i}`}>\n        <Link to={node.fields.slug}>\n          {exercise ? `${exercise} ) ` : ''}\n          {title}\n        </Link>\n        <nav className=\"nav exercise-content-nav\">\n          <ul>\n            {toc &&\n              toc.map((item, j) => (\n                <li key={`toc-${j}`}>\n                  <Link to={item.url}>{item.title}</Link>\n                </li>\n              ))}\n          </ul>\n        </nav>\n      </li>\n    );\n  });\n};\n\nconst PagesByLevel = ({ levels, location, nodes }) => (\n  <nav className=\"nav exercise-nav\">\n    {levels.map((level, i) => {\n      const currentLevelNodes = nodes.filter(\n        (node) => node.frontmatter.level === level\n      );\n      return (\n        <div key={`level-${i}`}>\n          {level !== null && <h3>Level {level}</h3>}\n          <ul>\n            <PageListItems location={location} nodes={currentLevelNodes} />\n          </ul>\n        </div>\n      );\n    })}\n  </nav>\n);\n\nconst PagesByCategory = ({ categories, location, nodes }) => {\n  return categories.map((category, i) => {\n    const currentCategoryNodes = nodes.filter(\n      (node) => node.frontmatter.category === category\n    );\n    const levels = getLevels(currentCategoryNodes);\n    return (\n      <>\n        {category !== null && <h2>{category}</h2>}\n        <PagesByLevel\n          levels={levels}\n          location={location}\n          nodes={currentCategoryNodes}\n        />\n      </>\n    );\n  });\n};\n\nconst SiteMap = ({ location, nodes }) => {\n  const categories = getCategories(nodes);\n\n  return (\n    <PagesByCategory\n      categories={categories}\n      location={location}\n      nodes={nodes}\n    />\n  );\n};\n\nexport default SiteMap;\n"],"names":["_createMdxContent","props","React","wrapper","MDXLayout","Object","assign","_provideComponents","components","ExerciseIndexTemplate","_ref","children","data","pageContext","location","pageTitle","frontmatter","title","subTitle","subtitle","heroImage","getImage","category","level","slug","mdx","fields","languages","useMemo","allDirectory","nodes","map","node","base","selectedLanguage","getCurrentLanguage","getLanguage","allMdx","filter","exercise","Layout","GatsbyImage","image","alt","Hero","className","SiteMap","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","PageHead","name","content","description","docs","language","doc","includes","slugsAr","split","forEach","v","PageListItems","i","toc","tableOfContents","items","key","Link","to","item","j","url","PagesByLevel","levels","currentLevelNodes","PagesByCategory","_ref3","categories","currentCategoryNodes","potentialValues","push","getLevels","_ref4","cat","getCategories"],"sourceRoot":""}